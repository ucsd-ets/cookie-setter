# Default values for deployment-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/ucsd-ets/deployment-controller
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: main
  containerPort: 8080
  command:
  - go
  args:
  - run
  - ../workspaces/deployment-controller/
  env:
  - name: API_KEY
    value: test

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}


nfs:
  # where the config file will live
  server: its-dsmlpdev-fs01.ucsd.edu
  path: /export/jupyterhub/deployment-controller

# deploymentControllerConfig:
#   apps:
#   - appName: jupyterhub
#     disable: false
#     cookieInfo:
#       expiration: 48h
#       canaryPercent: .80
#       ifSuccessful: # less than percent
#         key: a
#         value: a
#       ifFail:
#         key: b
#         value: b
#     view: # related to showing the UI elements to users (in this case, the stationary banner on datahub)
#       showSuccess: true
#       showFail: true
#     logging:
#       disable: false
#   port: 8080